25-5-2023:

1. NaivecoinStake appears to have a simplified interpretation of Proof of Stake. It doesn't have advanced features such as staking some of your coins in a smart contract or slashing those coins if you incorrectly validate a block. It seems to randomly choose nodes as validators, with nodes that have more coins to their name having a greater chance of being chosen. I originally got confused by the parts about difficulty at the bottom of the Proof of Stake chapter because that's associated with Proof of Work. PoW difficulty refers to the effort it takes to brute-force incremented numbers into a hash that starts with a certain number of 0's. NcS's difficulty just means the time it takes for a new block to be added to the blockchain.

2. The lack of any punishment feature is worrying, as there is nothing to discourage malicious nodes to attempt creating false transactions. As far as I know, the only thing preventing attackers from exploiting vulnerabilities is raw security measures themselves. This means if there are holes in the security measures, there is no fallback to mantain the financial disincentive to cheating.

3. I noticed that NaivecoinStake doesn't have any supply limit. Setting one probably isn't a high priority though, if I'm gonna be honest. Dogecoin doesn't have a supply limit if I remember correctly, but it still has a non-trivial value at the time of writing (about 7 cents).

26-5-2023:

1. Commands:

Get blockchain: curl http://localhost:3001/blocks
Mint a block: curl -X POST http://localhost:3001/mintBlock
Send transaction: curl -H "Content-type: application/json" --data '{"address": "04bfcab8722991ae774db48f934ca79cfb7dd991229153b9f732ba5334aafcd8e7266e47076996b55a14bf9913ee3145ce0cfc1372ada8ada74bd287450313534b", "amount" : 35}' http://localhost:3001/sendTransaction
Query transaction pool: curl http://localhost:3001/transactionPool
Mint transaction: curl -H "Content-type: application/json" --data '{"address": "04bfcab8722991ae774db48f934ca79cfb7dd991229153b9f732ba5334aafcd8e7266e47076996b55a14bf9913ee3145ce0cfc1372ada8ada74bd287450313534b", "amount" : 35}' http://localhost:3001/mintTransaction
Get balance: curl http://localhost:3001/balance
Query information about a specific address: curl http://localhost:3001/address/04f72a4541275aeb4344a8b049bfe2734b49fe25c08d56918f033507b96a61f9e3c330c4fcd46d0854a712dc878b9c280abe90c788c47497e06df78b25bf60ae64
Add peer: curl -H "Content-type:application/json" --data '{"peer" : "ws://localhost:6001"}' http://localhost:3001/addPeer
Query connected peers: curl http://localhost:3001/peers

I should probably make a GUI to streamline typing these commands. I suppose that GUI could be "Nebu Core", like how Bitcoin has Bitcoin Core. Although, I'm not sure if it would require more doohickeys than NcS's default wallet UI, or if the stuff nodes do with validating transactions is automated.
